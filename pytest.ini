[tool:pytest]
# Configuration pytest pour Consultator

# Répertoires de recherche des tests
testpaths =
    tests
    .

# Patterns de fichiers de tests
python_files = test_*.py *_test.py

# Patterns de classes de tests
python_classes = Test*

# Patterns de fonctions de tests
python_functions = test_*

# Ajout du répertoire app au PYTHONPATH
pythonpath =
    .
    app
    C:\Users\b302gja\Documents\Consultator en cours\Consultator

# Options par défaut
addopts =
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --assert=plain
    --cov=app
    --cov-report=html:reports/htmlcov
    --cov-report=xml:reports/coverage.xml
    --cov-report=term-missing
    --junit-xml=reports/test-results.xml
    --html=reports/test-report.html
    --self-contained-html
    -n auto

# Marqueurs de tests
markers =
    unit: Tests unitaires
    integration: Tests d'intégration
    performance: Tests de performance
    regression: Tests de non-régression
    security: Tests de sécurité
    slow: Tests lents (> 1s)
    fast: Tests rapides (< 1s)
    database: Tests nécessitant une base de données
    streamlit: Tests d'interface Streamlit
    critical: Tests critiques pour la production

# Filtres de warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*streamlit.*:UserWarning

# Seuils de couverture
[coverage:run]
source = app
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

# Seuil minimal de couverture (80%)
fail_under = 80
