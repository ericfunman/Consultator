"""
Script de migration pour ajouter les nouveaux champs p√©riode d'essai et statut actif
Version 1.2.3 - Septembre 2025
"""

import sqlite3
import sys
from pathlib import Path

# Chemin vers la base de donn√©es
DB_PATH = "test_consultator.db"


def migrate_add_periode_essai_and_actif():
    """Ajoute les nouvelles colonnes √† la table consultants"""

    print("üîÑ Migration base de donn√©es v1.2.3")
    print("‚ûï Ajout des champs p√©riode d'essai et statut actif")

    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()

        # V√©rifier si les colonnes existent d√©j√†
        cursor.execute("PRAGMA table_info(consultants)")
        columns = [column[1] for column in cursor.fetchall()]

        # Ajouter etat_periode_essai si elle n'existe pas
        if "etat_periode_essai" not in columns:
            cursor.execute(
                """
                ALTER TABLE consultants 
                ADD COLUMN etat_periode_essai VARCHAR(50)
            """
            )
            print("‚úÖ Colonne 'etat_periode_essai' ajout√©e")
        else:
            print("‚ö†Ô∏è Colonne 'etat_periode_essai' existe d√©j√†")

        # Ajouter fin_periode_essai si elle n'existe pas
        if "fin_periode_essai" not in columns:
            cursor.execute(
                """
                ALTER TABLE consultants 
                ADD COLUMN fin_periode_essai DATE
            """
            )
            print("‚úÖ Colonne 'fin_periode_essai' ajout√©e")
        else:
            print("‚ö†Ô∏è Colonne 'fin_periode_essai' existe d√©j√†")

        # Ajouter actif si elle n'existe pas
        if "actif" not in columns:
            cursor.execute(
                """
                ALTER TABLE consultants 
                ADD COLUMN actif BOOLEAN DEFAULT 1
            """
            )
            print("‚úÖ Colonne 'actif' ajout√©e")

            # Mettre tous les consultants existants comme actifs par d√©faut
            cursor.execute(
                """
                UPDATE consultants 
                SET actif = 1 
                WHERE actif IS NULL
            """
            )
            print("‚úÖ Consultants existants mis √† jour (actif=True par d√©faut)")
        else:
            print("‚ö†Ô∏è Colonne 'actif' existe d√©j√†")

        conn.commit()
        conn.close()

        print("üéâ Migration v1.2.3 termin√©e avec succ√®s !")

    except Exception as e:
        print(f"‚ùå Erreur lors de la migration: {e}")
        if "conn" in locals():
            conn.rollback()
            conn.close()


if __name__ == "__main__":
    migrate_add_periode_essai_and_actif()
