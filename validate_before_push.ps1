# Script de validation avant push - Consultator (PowerShell)
# Lance toutes les v√©rifications du CI/CD en local

Write-Host "üîç ==================================" -ForegroundColor Cyan
Write-Host "   VALIDATION PRE-PUSH CONSULTATOR" -ForegroundColor Cyan
Write-Host "==================================" -ForegroundColor Cyan
Write-Host ""

$ErrorCount = 0

# √âtape 1: Black
Write-Host "üìã √âtape 1/5: V√©rification Black (formatage code)" -ForegroundColor Yellow
Write-Host "---------------------------------------------------"
$blackResult = python -m black --check --diff --line-length 120 app/ tests/ 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Black: Code correctement format√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Black: Code mal format√©" -ForegroundColor Red
    Write-Host "Pour corriger: python -m black app/ tests/ --line-length 120" -ForegroundColor Yellow
    $ErrorCount++
}
Write-Host ""

# √âtape 2: isort
Write-Host "üìã √âtape 2/5: V√©rification isort (ordre imports)" -ForegroundColor Yellow
Write-Host "---------------------------------------------------"
$isortResult = python -m isort --check-only --diff app/ tests/ 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ isort: Imports correctement ordonn√©s" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  isort: Imports mal ordonn√©s (non-bloquant en CI/CD)" -ForegroundColor Yellow
    Write-Host "Pour corriger: python -m isort app/ tests/" -ForegroundColor Yellow
}
Write-Host ""

# √âtape 3: Flake8
Write-Host "üìã √âtape 3/5: V√©rification Flake8 (linting)" -ForegroundColor Yellow
Write-Host "---------------------------------------------------"
$flake8Result = python -m flake8 app/ --max-line-length=150 --extend-ignore=E203,W503,F401,F841,W291,W293,E501,C901,E722,F541 --max-complexity=20 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Flake8: Pas d'erreurs de linting" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Flake8: Avertissements d√©tect√©s (non-bloquants)" -ForegroundColor Yellow
}
Write-Host ""

# √âtape 4: Tests de r√©gression
Write-Host "üìã √âtape 4/5: Tests de r√©gression" -ForegroundColor Yellow
Write-Host "---------------------------------------------------"
if (Test-Path "tests/regression") {
    $testResult = python -m pytest tests/regression/ -v --tb=short 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Tests de r√©gression: OK" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Tests de r√©gression: √âCHEC" -ForegroundColor Red
        $ErrorCount++
    }
} else {
    Write-Host "‚ö†Ô∏è  Pas de tests de r√©gression trouv√©s" -ForegroundColor Yellow
}
Write-Host ""

# √âtape 5: Base de donn√©es
Write-Host "üìã √âtape 5/5: V√©rification base de donn√©es" -ForegroundColor Yellow
Write-Host "---------------------------------------------------"
$dbResult = python -c "from app.database.database import init_database; init_database(); print('‚úÖ DB OK')" 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Base de donn√©es: Initialisable" -ForegroundColor Green
} else {
    Write-Host "‚ùå Base de donn√©es: Erreur d'initialisation" -ForegroundColor Red
    $ErrorCount++
}
Write-Host ""

# R√©sultat final
Write-Host "==================================" -ForegroundColor Cyan
if ($ErrorCount -eq 0) {
    Write-Host "‚úÖ TOUTES LES VALIDATIONS PASS√âES !" -ForegroundColor Green
    Write-Host "==================================" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üöÄ Vous pouvez pousser en toute s√©curit√©:" -ForegroundColor Green
    Write-Host "   git push origin master" -ForegroundColor White
    Write-Host ""
    exit 0
} else {
    Write-Host "‚ùå $ErrorCount ERREUR(S) D√âTECT√âE(S)" -ForegroundColor Red
    Write-Host "==================================" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "‚ö†Ô∏è  Corrigez les erreurs avant de pousser" -ForegroundColor Yellow
    Write-Host ""
    exit 1
}
